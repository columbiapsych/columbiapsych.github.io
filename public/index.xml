<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Columbia Psychology: Prospective Students&#39; Day</title>
    <link>/</link>
    <description>Recent content in Home on Columbia Psychology: Prospective Students&#39; Day</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Housing</title>
      <link>/housing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/housing/</guid>
      <description>Housing Come and learn with us at one of our meetings! Topics span various early-intermediate to advanced strategies for asking psychological research questions using scientific computing tools.
 Workshop Recording: Session 1    var tag = document.createElement(&#39;script&#39;); tag.src = &#34;https://www.youtube.com/iframe_api&#34;; var firstScriptTag = document.getElementsByTagName(&#39;script&#39;)[0]; firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); var player; var ytSeconds = 0; function onYouTubeIframeAPIReady() { player = new YT.Player(&#39;player&#39;, { height: &#39;390&#39;, width: &#39;640&#39;, videoId: &#39;h52nyfxQ6hc&#39;, playerVars: { &#39;color&#39;: &#34;</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resources/</guid>
      <description>  Resources Zoom Zoom is blah blah. During Prospective’s weekend, you’ll use it for the formal meetings.
 Cookbook for R: Basics of data cleaning, analysis and graphing   Kumospace Kumospace is blah blah. During Prospective’s weekend, you’ll use it for blah.
 Columbia Psychology scientific computing users Slack group   Slack Slack is blah blah. During Prospective’s weekend, you’ll use it for blah.
 Cookbook for R: Basics of data cleaning, analysis and graphing    </description>
    </item>
    
    <item>
      <title>Schedule</title>
      <link>/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/schedule/</guid>
      <description>Schedule Instructors: Paul A. Bloom, Ana DiGiovanni, Camille Gasser, Manasi Jayakumar, Emily Nakkawita, Jonathan Nicholas, Matt Siegelman, Ben Silver, Hannah Tarder-Stoll, Monica Thieu, Anna Vannucci
 General Information This workshop develops and teaches the scientific computing skills needed to conduct psychological research. Its target audience is researchers who have little to no prior computational experience, and its lessons are psychology-specific, building on learners’ existing knowledge to enable them to quickly apply skills learned to their own research.</description>
    </item>
    
    <item>
      <title>Who We Are</title>
      <link>/who/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/who/</guid>
      <description>Who We Are 2020 - 2021 Graduate Methods Support Advisors Emily Nakkawita  Research interests: how goal pursuit processes differ based on individuals’ unique motivational orientations Method specialties: surveys, web-based response latency tasks Tool/language specialties: R, generating manuscripts with Papaja, Javascript/HTML customization in Qualtrics, M-Turk, Prolific Favorite NYC neighborhood: Park Slope   Hannah Tarder-Stoll  Research interests: how memory is flexibly used to predict future events at different timescales Method specialties: cognitive tasks (in-person and web-based), neuroimaging, virtual reality Tool/language specialties: R, Python, Unity, Inquisit Favorite NYC neighborhood: Astoria    Office hours will be held by appointment.</description>
    </item>
    
    <item>
      <title>Workshop Recording: Session 1</title>
      <link>/workshop-recording/session1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshop-recording/session1/</guid>
      <description>Workshop Recording: Session 1    var tag = document.createElement(&#39;script&#39;); tag.src = &#34;https://www.youtube.com/iframe_api&#34;; var firstScriptTag = document.getElementsByTagName(&#39;script&#39;)[0]; firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); var player; var ytSeconds = 0; function onYouTubeIframeAPIReady() { player = new YT.Player(&#39;player&#39;, { height: &#39;390&#39;, width: &#39;640&#39;, videoId: &#39;h52nyfxQ6hc&#39;, playerVars: { &#39;color&#39;: &#34;white&#34;, &#39;showinfo&#39;: 0, &#39;rel&#39;: 0 }, events: { &#39;onStateChange&#39;: onPlayerStateChange } }); } function onPlayerStateChange(e) { if (e.data == 1 &amp;&amp; ytSeconds  0) { e.</description>
    </item>
    
    <item>
      <title>Workshop Recording: Session 2</title>
      <link>/workshop-recording/session2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshop-recording/session2/</guid>
      <description>Workshop Recording: Session 2    var tag = document.createElement(&#39;script&#39;); tag.src = &#34;https://www.youtube.com/iframe_api&#34;; var firstScriptTag = document.getElementsByTagName(&#39;script&#39;)[0]; firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); var player; var ytSeconds = 0; function onYouTubeIframeAPIReady() { player = new YT.Player(&#39;player&#39;, { height: &#39;390&#39;, width: &#39;640&#39;, videoId: &#39;b_8QeK5fIH4&#39;, playerVars: { &#39;color&#39;: &#34;white&#34;, &#39;showinfo&#39;: 0, &#39;rel&#39;: 0 }, events: { &#39;onStateChange&#39;: onPlayerStateChange } }); } function onPlayerStateChange(e) { if (e.data == 1 &amp;&amp; ytSeconds  0) { e.</description>
    </item>
    
    <item>
      <title>Workshop Recording: Session 3</title>
      <link>/workshop-recording/session3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshop-recording/session3/</guid>
      <description>Workshop Recording: Session 3    var tag = document.createElement(&#39;script&#39;); tag.src = &#34;https://www.youtube.com/iframe_api&#34;; var firstScriptTag = document.getElementsByTagName(&#39;script&#39;)[0]; firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); var player; var ytSeconds = 0; function onYouTubeIframeAPIReady() { player = new YT.Player(&#39;player&#39;, { height: &#39;390&#39;, width: &#39;640&#39;, videoId: &#39;e_F7Diu2EtU&#39;, playerVars: { &#39;color&#39;: &#34;white&#34;, &#39;showinfo&#39;: 0, &#39;rel&#39;: 0 }, events: { &#39;onStateChange&#39;: onPlayerStateChange } }); } function onPlayerStateChange(e) { if (e.data == 1 &amp;&amp; ytSeconds  0) { e.</description>
    </item>
    
  </channel>
</rss>